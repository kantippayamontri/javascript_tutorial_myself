'use strict';

var gpxBuilder = require('gpx-builder');

const {
  Point,
  Metadata,
  Track,
  Segment
} = gpxBuilder.GarminBuilder.MODELS; // @ts-ignore

function convertPoints(points) {
  return points.map(point => {
    return point.toObject();
  }).map(point => {
    const {
      altitude,
      cadence,
      hr,
      latitude,
      longitude,
      speed,
      time,
      temperature
    } = point;

    if (!latitude || !longitude) {
      return null;
    }

    return new Point(latitude, longitude, {
      time: time ? time.toJSDate() : undefined,
      hr,
      cad: cadence,
      ele: altitude ? altitude.toNumber('m') : undefined,
      speed: speed ? speed.toNumber('m/s') : undefined,
      atemp: temperature ? temperature.toNumber('celsius') : undefined
    });
  }).filter(item => item !== null);
}

var workoutGPXExporter = (workout => {
  const builder = new gpxBuilder.GarminBuilder();
  builder.setMetadata(new Metadata({
    time: workout.getStart().toJSDate()
  }));
  builder.setTracks([new Track([new Segment(convertPoints(workout.getPoints()))], {
    type: workout.getTypeName()
  })]);
  return gpxBuilder.buildGPX(builder.toObject());
});

module.exports = workoutGPXExporter;
