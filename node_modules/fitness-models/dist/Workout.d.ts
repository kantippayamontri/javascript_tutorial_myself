import { DateTime, Duration } from 'luxon';
import { Unit } from 'mathjs';
import { WorkoutType } from './workout-types';
import * as PRIVACY from './workout-privacy';
import Point from './Point';
export interface Constructor {
    start: DateTime;
    duration: Duration;
    typeId: WorkoutType | string | number;
    points?: Point[];
    distance?: Unit;
    ascent?: Unit;
    descent?: Unit;
    calories?: number;
    notes?: string;
    avgHeartRate?: number;
    maxHeartRate?: number;
    title?: string;
    hashtags?: string[];
    isRace?: boolean;
    isCommute?: boolean;
    privacy?: PRIVACY.Privacy;
    mapPrivacy?: PRIVACY.Privacy;
}
export default class Workout {
    protected start: DateTime;
    protected duration: Duration;
    protected typeId: WorkoutType | string | number;
    protected points: Point[];
    protected distance?: Unit;
    protected calories?: number;
    protected notes?: string;
    protected avgHeartRate?: number;
    protected maxHeartRate?: number;
    protected title?: string;
    protected ascent?: Unit;
    protected descent?: Unit;
    protected hashtags: string[];
    isRace: boolean;
    isCommute: boolean;
    protected privacy?: PRIVACY.Privacy;
    protected mapPrivacy?: PRIVACY.Privacy;
    constructor({ start, duration, typeId, distance, points, calories, notes, avgHeartRate, maxHeartRate, title, ascent, descent, isRace, isCommute, hashtags, privacy, mapPrivacy, }: Constructor);
    static PRIVACY: typeof PRIVACY;
    protected clone(extend: Partial<Constructor>): Workout;
    getTypeId(): string | number;
    getTypeName(): string;
    getStart(): DateTime;
    getEnd(): DateTime;
    getDuration(): Duration;
    getDistance(): Unit | undefined;
    getPoints(): Point[];
    hasPoints(): boolean;
    hasGps(): boolean;
    getCalories(): number | undefined;
    getNotes(): string | undefined;
    getAvgHeartRate(): number | undefined;
    getMaxHeartRate(): number | undefined;
    getTitle(): string | undefined;
    getAscent(): Unit | undefined;
    getDescent(): Unit | undefined;
    getPrivacy(): 0 | 1 | 2 | undefined;
    getMapPrivacy(): 0 | 1 | 2 | undefined;
    getHashtags(): string[];
    hasHashtag(hashtag: string): boolean;
    setHashtags(hashtags: string[]): Workout;
    removeHashtag(hashtag: string): Workout;
    removeHashtags(hashtags: string[]): Workout;
    addHashtags(hashtags: string[]): Workout;
    addHashtag(hashtag: string): Workout;
    setTypeId(typeId: WorkoutType | string | number): Workout;
    setStart(start: DateTime): Workout;
    setDuration(duration: Duration): Workout;
    setDistance(distance?: Unit): Workout;
    setPoints(points: Point[]): Workout;
    setCalories(calories?: number): Workout;
    setNotes(notes?: string): Workout;
    setAvgHeartRate(avgHeartRate?: number): Workout;
    setMaxHeartRate(maxHeartRate?: number): Workout;
    setTitle(title?: string): Workout;
    setAscent(ascent?: Unit): Workout;
    setDescent(descent?: Unit): Workout;
    setCommute(isCommute: boolean): Workout;
    setRace(isRace: boolean): Workout;
    setPrivacy(privacy?: PRIVACY.Privacy): Workout;
    setMapPrivacy(privacy?: PRIVACY.Privacy): Workout;
    toObject(): Constructor;
    toGpx(): string;
    toString(): string;
}
