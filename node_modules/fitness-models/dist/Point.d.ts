import { DateTime, Duration } from 'luxon';
import { Unit } from 'mathjs';
export interface Constructor {
    time?: DateTime;
    latitude?: number;
    longitude?: number;
    hr?: number;
    cadence?: number;
    distance?: Unit;
    altitude?: Unit;
    duration?: Duration;
    speed?: Unit;
    temperature?: Unit;
}
export default class Point {
    protected time?: DateTime;
    protected latitude?: number;
    protected longitude?: number;
    protected distance?: Unit;
    protected duration?: Duration;
    protected speed?: Unit;
    protected hr?: number;
    protected cadence?: number;
    protected altitude?: Unit;
    protected temperature?: Unit;
    constructor({ time, latitude, longitude, distance, duration, speed, hr, cadence, altitude, temperature, }: Constructor);
    protected clone(extend: Partial<Constructor>): Point;
    getTime(): DateTime | undefined;
    getLatitude(): number | undefined;
    getLongitude(): number | undefined;
    getAltitude(): Unit | undefined;
    getDistance(): Unit | undefined;
    getSpeed(): Unit | undefined;
    getHeartRate(): number | undefined;
    getCadence(): number | undefined;
    getDuration(): Duration | undefined;
    getTemperature(): Unit | undefined;
    setTime(time?: DateTime): Point;
    setLatitude(latitude?: number): Point;
    setLongitude(longitude?: number): Point;
    setAltitude(altitude?: Unit): Point;
    setDistance(distance?: Unit): Point;
    setSpeed(speed?: Unit): Point;
    setHeartRate(hr?: number): Point;
    setCadence(cadence?: number): Point;
    setDuration(duration?: Duration): Point;
    setTemperature(temperature?: Unit): Point;
    toObject(): Constructor;
}
