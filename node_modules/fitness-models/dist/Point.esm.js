import _defineProperty from '@babel/runtime/helpers/defineProperty';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

class Point {
  constructor({
    time,
    latitude,
    longitude,
    distance,
    duration,
    speed,
    hr,
    cadence,
    altitude,
    temperature
  }) {
    _defineProperty(this, "time", void 0);

    _defineProperty(this, "latitude", void 0);

    _defineProperty(this, "longitude", void 0);

    _defineProperty(this, "distance", void 0);

    _defineProperty(this, "duration", void 0);

    _defineProperty(this, "speed", void 0);

    _defineProperty(this, "hr", void 0);

    _defineProperty(this, "cadence", void 0);

    _defineProperty(this, "altitude", void 0);

    _defineProperty(this, "temperature", void 0);

    this.time = time;
    this.latitude = latitude;
    this.longitude = longitude;
    this.distance = distance;
    this.duration = duration;
    this.speed = speed;
    this.hr = hr;
    this.cadence = cadence;
    this.altitude = altitude;
    this.temperature = temperature;
  }

  clone(extend) {
    return new Point(_objectSpread({}, this.toObject(), {}, extend));
  }

  getTime() {
    return this.time;
  }

  getLatitude() {
    return this.latitude;
  }

  getLongitude() {
    return this.longitude;
  }

  getAltitude() {
    return this.altitude;
  }

  getDistance() {
    return this.distance;
  }

  getSpeed() {
    return this.speed;
  }

  getHeartRate() {
    return this.hr;
  }

  getCadence() {
    return this.cadence;
  }

  getDuration() {
    return this.duration;
  }

  getTemperature() {
    return this.temperature;
  }

  setTime(time) {
    return this.clone({
      time
    });
  }

  setLatitude(latitude) {
    return this.clone({
      latitude
    });
  }

  setLongitude(longitude) {
    return this.clone({
      longitude
    });
  }

  setAltitude(altitude) {
    return this.clone({
      altitude
    });
  }

  setDistance(distance) {
    return this.clone({
      distance
    });
  }

  setSpeed(speed) {
    return this.clone({
      speed
    });
  }

  setHeartRate(hr) {
    return this.clone({
      hr
    });
  }

  setCadence(cadence) {
    return this.clone({
      cadence
    });
  }

  setDuration(duration) {
    return this.clone({
      duration
    });
  }

  setTemperature(temperature) {
    return this.clone({
      temperature
    });
  }

  toObject() {
    return {
      time: this.time,
      latitude: this.latitude,
      longitude: this.longitude,
      distance: this.distance,
      duration: this.duration,
      speed: this.speed,
      hr: this.hr,
      cadence: this.cadence,
      altitude: this.altitude,
      temperature: this.temperature
    };
  }

}

export default Point;
