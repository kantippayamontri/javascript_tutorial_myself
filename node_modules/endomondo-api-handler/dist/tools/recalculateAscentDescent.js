'use strict';

var mathjs = require('mathjs');

/**
 * Recalculate total ascent and descent.
 *
 * @param workout
 * @returns {Workout}
 */
function recalculateAscentDescent(workout) {
  let ascent = 0;
  let descent = 0;
  let previusPoint = null;
  workout.getPoints().forEach(point => {
    if (!previusPoint) {
      previusPoint = point;
      return;
    }

    const altitude = point.getAltitude();
    const previusAltitude = previusPoint.getAltitude();

    if (altitude == null) {
      return;
    }

    if (previusAltitude == null) {
      previusPoint = point;
      return;
    }

    const diff = altitude.toNumber('m') - previusAltitude.toNumber('m');

    if (diff > 0) {
      ascent += diff;
    } else {
      descent -= diff;
    }

    previusPoint = point;
  });
  return workout.setAscent(mathjs.unit(ascent, 'm')).setDescent(mathjs.unit(descent, 'm'));
}

module.exports = recalculateAscentDescent;
