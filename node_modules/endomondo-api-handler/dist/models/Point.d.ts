import { DateTime, Duration, DurationObject, Zone } from 'luxon';
import { Unit } from 'mathjs';
import { Point as BasePoint, TYPES } from 'fitness-models';
import { API } from '../types';
interface Constructor extends TYPES.PointConstructor {
    instruction?: number;
}
export default class Point extends BasePoint {
    protected instruction?: number;
    constructor(options: Constructor);
    static fromApi(point: API.Point, timezone: string | Zone): Point;
    static get(time: DateTime | string, latitude: number, longitude: number, { instruction, distance, duration, speed, altitude, cadence, hr, }?: {
        instruction?: number;
        distance?: Unit | number;
        duration?: Duration | DurationObject | number;
        speed?: Unit | number;
        cadence?: number;
        hr?: number;
        altitude?: Unit | number;
    }): Point;
    protected clone(extension?: Partial<Constructor>): Point;
    getInstruction(): number | undefined;
    setInstruction(instruction?: number): Point;
    setTime(time?: DateTime): Point;
    setLatitude(latitude?: number): Point;
    setLongitude(longitude?: number): Point;
    setAltitude(altitude?: Unit): Point;
    setDistance(distance?: Unit): Point;
    setSpeed(speed?: Unit): Point;
    setHeartRate(hr?: number): Point;
    setCadence(cadence?: number): Point;
    setDuration(duration?: Duration): Point;
    toObject(): Constructor;
    toString(): string;
}
export {};
